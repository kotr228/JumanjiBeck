"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const db2_1 = __importDefault(require("../config/db2")); // —Ç–≤–æ—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MySQL
const router = express_1.default.Router();
/**
 * ‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Å—Ç—ñ–ª
 * POST /api/tables
 */
router.post('', (req, res) => __awaiter(void 0, void 0, void 0, function* () {
    const { table_number, seats, location, is_vip } = req.body;
    if (!table_number || !seats) {
        return res.status(400).json({ message: '–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª—É —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º—ñ—Å—Ü—å' });
    }
    try {
        const [result] = yield db2_1.default.execute('INSERT INTO tables (table_number, seats, location, is_vip) VALUES (?, ?, ?, ?)', [table_number, seats, location || null, is_vip || false]);
        res.status(201).json({
            message: '–°—Ç—ñ–ª —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ',
            table_id: result.insertId,
        });
    }
    catch (error) {
        if (error.code === 'ER_DUP_ENTRY') {
            return res.status(409).json({ message: '–°—Ç—ñ–ª –∑ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –≤–∂–µ —ñ—Å–Ω—É—î' });
        }
        res.status(500).json({ message: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error });
    }
}));
/**
 * ‚úèÔ∏è –û–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ —Å—Ç–æ–ª—É
 * PUT /api/tables/:id
 */
router.put('/:id', (req, res) => __awaiter(void 0, void 0, void 0, function* () {
    const tableId = req.params.id;
    const { table_number, seats, location, is_vip, is_active } = req.body;
    try {
        const [result] = yield db2_1.default.execute(`UPDATE tables 
       SET table_number = ?, seats = ?, location = ?, is_vip = ?, is_active = ?
       WHERE id = ?`, [table_number, seats, location || null, is_vip || false, is_active !== null && is_active !== void 0 ? is_active : true, tableId]);
        res.json({ message: '–°—Ç—ñ–ª –æ–Ω–æ–≤–ª–µ–Ω–æ' });
    }
    catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–æ–ª—É:', error);
        res.status(500).json({ message: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
}));
/**
 * ‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç—ñ–ª
 * DELETE /api/tables/:id
 */
router.delete('/:id', (req, res) => __awaiter(void 0, void 0, void 0, function* () {
    const tableId = req.params.id;
    try {
        const [result] = yield db2_1.default.execute('DELETE FROM tables WHERE id = ?', [tableId]);
        res.json({ message: '–°—Ç—ñ–ª –≤–∏–¥–∞–ª–µ–Ω–æ' });
    }
    catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Å—Ç–æ–ª—É:', error);
        res.status(500).json({ message: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
}));
/**
 * üìÑ –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö —Å—Ç–æ–ª—ñ–≤
 * GET /api/tables
 */
router.get('', (_req, res) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const [rows] = yield db2_1.default.execute('SELECT * FROM tables ORDER BY table_number');
        res.json(rows);
    }
    catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É —Å—Ç–æ–ª—ñ–≤:', error);
        res.status(500).json({ message: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
}));
exports.default = router;
